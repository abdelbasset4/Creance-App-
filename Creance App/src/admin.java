
import com.toedter.calendar.JDateChooser;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Benatmani
 */


public class admin extends javax.swing.JFrame {
    DefaultTableModel modelTableUseres=new DefaultTableModel();
    DefaultTableModel modelTableCompany=new DefaultTableModel();
    DefaultTableModel modelTableContracts=new DefaultTableModel();
    DefaultTableModel modelTableAvenant = new DefaultTableModel();
    DefaultTableModel modelTableRole = new DefaultTableModel();
    String idCompany,idContract,idUser;
    boolean clickTableContract,clickAvTable,clickRoleTable,clickUserTable,clickCompanyTable;
    /** Creates new form admin */
    public admin() {
        initComponents();
        modelTableUseres.addColumn("ID");
        modelTableUseres.addColumn("Utilisateur");
        modelTableUseres.addColumn("Mot de passe");
        modelTableCompany.addColumn("ID");
        modelTableCompany.addColumn("Enterprise");
        modelTableCompany.addColumn("Adress");
        modelTableCompany.addColumn("Wilaya");
        //modelTableContracts.addColumn("id Contract");
        modelTableContracts.addColumn("Enterprise");
        modelTableContracts.addColumn("Numero Contract");
        modelTableContracts.addColumn("Date debut");
        modelTableContracts.addColumn("Duree");
        modelTableContracts.addColumn("Tarif");
        modelTableContracts.addColumn("TVA");
        modelTableContracts.addColumn("Agence");
        modelTableContracts.addColumn("RIB");
        //modelTableAvenant.addColumn("id");
        modelTableAvenant.addColumn("Enterprise");
        modelTableAvenant.addColumn("Numero Contract");
        modelTableAvenant.addColumn("Ref Avenant"); 
        modelTableAvenant.addColumn("Date debut");
        modelTableAvenant.addColumn("Duree");
        modelTableRole.addColumn("User");
        modelTableRole.addColumn("Enterprise");
        modelTableRole.addColumn("Ref Contract");
        //comboBoxCompanyRole();
        affichage();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        avanant = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        close1 = new javax.swing.JLabel();
        dateDebutAvn = new com.toedter.calendar.JDateChooser();
        dureeAvn = new javax.swing.JTextField();
        numAvn = new javax.swing.JSpinner();
        cmpAvanant = new javax.swing.JComboBox<>();
        contractAvnanantSearch = new javax.swing.JComboBox<>();
        contractAvnanant = new javax.swing.JComboBox<>();
        addAvn = new javax.swing.JLabel();
        updateAvn = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        avnTable = new javax.swing.JTable();
        backgroundAv = new javax.swing.JLabel();
        box = new javax.swing.JPanel();
        adminPanel = new javax.swing.JPanel();
        addContracts = new javax.swing.JLabel();
        addRoles = new javax.swing.JLabel();
        addCmps = new javax.swing.JLabel();
        addUsres = new javax.swing.JLabel();
        backgroundAdmin = new javax.swing.JLabel();
        addUsrPanel = new javax.swing.JPanel();
        updateUsr = new javax.swing.JLabel();
        backUsr = new javax.swing.JLabel();
        addUsr = new javax.swing.JLabel();
        password = new javax.swing.JTextField();
        username = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        backgroundUsrs = new javax.swing.JLabel();
        addCmpPanel = new javax.swing.JPanel();
        updateCmp = new javax.swing.JLabel();
        backCmp = new javax.swing.JLabel();
        addCmp = new javax.swing.JLabel();
        nameCmp = new javax.swing.JTextField();
        wilaya = new javax.swing.JTextField();
        adresse = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        cmpTable = new javax.swing.JTable();
        backgroundCmp = new javax.swing.JLabel();
        addRolePanel = new javax.swing.JPanel();
        updateRole = new javax.swing.JLabel();
        backRole = new javax.swing.JLabel();
        addRole = new javax.swing.JLabel();
        cmpRole = new javax.swing.JComboBox<>();
        contractRole = new javax.swing.JComboBox<>();
        userRole = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        roleTable = new javax.swing.JTable();
        backgroundRole = new javax.swing.JLabel();
        addContractPanel = new javax.swing.JPanel();
        backContr = new javax.swing.JLabel();
        updateContr = new javax.swing.JLabel();
        addAvnnPanel = new javax.swing.JLabel();
        addContr = new javax.swing.JLabel();
        companyContr = new javax.swing.JComboBox<>();
        searchByContract = new javax.swing.JTextField();
        retenuContr = new javax.swing.JTextField();
        agenceContr = new javax.swing.JTextField();
        ripContr = new javax.swing.JTextField();
        dureeContr = new javax.swing.JTextField();
        numContr = new javax.swing.JTextField();
        dateDebutContr = new com.toedter.calendar.JDateChooser();
        tva = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        contrTable = new javax.swing.JTable();
        backgroundContr = new javax.swing.JLabel();

        avanant.setMinimumSize(new java.awt.Dimension(1024, 700));
        avanant.setUndecorated(true);
        avanant.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                avanantWindowOpened(evt);
            }
        });
        avanant.getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        close1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.jpg"))); // NOI18N
        close1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                close1MouseClicked(evt);
            }
        });
        jPanel1.add(close1);
        close1.setBounds(980, 4, 35, 30);

        dateDebutAvn.setBackground(new java.awt.Color(255, 255, 255));
        dateDebutAvn.setDateFormatString("dd/MM/yyyy");
        dateDebutAvn.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jPanel1.add(dateDebutAvn);
        dateDebutAvn.setBounds(400, 288, 210, 35);

        dureeAvn.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        dureeAvn.setBorder(null);
        jPanel1.add(dureeAvn);
        dureeAvn.setBounds(632, 287, 65, 28);

        numAvn.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jPanel1.add(numAvn);
        numAvn.setBounds(60, 290, 80, 30);

        cmpAvanant.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        cmpAvanant.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmpAvanantItemStateChanged(evt);
            }
        });
        cmpAvanant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmpAvanantMouseClicked(evt);
            }
        });
        cmpAvanant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpAvanantActionPerformed(evt);
            }
        });
        jPanel1.add(cmpAvanant);
        cmpAvanant.setBounds(50, 190, 280, 35);

        contractAvnanantSearch.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        contractAvnanantSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contractAvnanantSearchActionPerformed(evt);
            }
        });
        jPanel1.add(contractAvnanantSearch);
        contractAvnanantSearch.setBounds(320, 420, 280, 35);

        contractAvnanant.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        contractAvnanant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "chosse" }));
        jPanel1.add(contractAvnanant);
        contractAvnanant.setBounds(400, 190, 280, 35);

        addAvn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.jpg"))); // NOI18N
        addAvn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addAvn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAvnMouseClicked(evt);
            }
        });
        jPanel1.add(addAvn);
        addAvn.setBounds(540, 350, 190, 70);

        updateAvn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.jpg"))); // NOI18N
        updateAvn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updateAvn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateAvnMouseClicked(evt);
            }
        });
        jPanel1.add(updateAvn);
        updateAvn.setBounds(740, 350, 190, 70);

        jScrollPane5.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane5.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N

        avnTable.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        avnTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        avnTable.setRowHeight(25);
        avnTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                avnTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(avnTable);

        jPanel1.add(jScrollPane5);
        jScrollPane5.setBounds(70, 470, 860, 200);

        backgroundAv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Avenant frame.png"))); // NOI18N
        jPanel1.add(backgroundAv);
        backgroundAv.setBounds(0, 0, 1024, 690);

        avanant.getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1025, 700);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1200, 720));
        setMinimumSize(new java.awt.Dimension(1200, 720));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        box.setLayout(new java.awt.CardLayout());

        adminPanel.setLayout(null);

        addContracts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/contrat admin.jpg"))); // NOI18N
        addContracts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addContractsMouseClicked(evt);
            }
        });
        adminPanel.add(addContracts);
        addContracts.setBounds(610, 190, 530, 230);

        addRoles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/role admin.jpg"))); // NOI18N
        addRoles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addRolesMouseClicked(evt);
            }
        });
        adminPanel.add(addRoles);
        addRoles.setBounds(55, 430, 530, 230);

        addCmps.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/company admin.jpg"))); // NOI18N
        addCmps.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addCmpsMouseClicked(evt);
            }
        });
        adminPanel.add(addCmps);
        addCmps.setBounds(610, 430, 530, 230);

        addUsres.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user admin.jpg"))); // NOI18N
        addUsres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUsresMouseClicked(evt);
            }
        });
        adminPanel.add(addUsres);
        addUsres.setBounds(55, 190, 530, 230);

        backgroundAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/admin panel.png"))); // NOI18N
        adminPanel.add(backgroundAdmin);
        backgroundAdmin.setBounds(0, 0, 1200, 720);

        box.add(adminPanel, "card2");

        addUsrPanel.setLayout(null);

        updateUsr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.jpg"))); // NOI18N
        updateUsr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updateUsr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateUsrMouseClicked(evt);
            }
        });
        addUsrPanel.add(updateUsr);
        updateUsr.setBounds(750, 322, 190, 70);

        backUsr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.jpg"))); // NOI18N
        backUsr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        backUsr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backUsrMouseClicked(evt);
            }
        });
        addUsrPanel.add(backUsr);
        backUsr.setBounds(950, 320, 220, 70);

        addUsr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.jpg"))); // NOI18N
        addUsr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addUsr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUsrMouseClicked(evt);
            }
        });
        addUsrPanel.add(addUsr);
        addUsr.setBounds(550, 320, 190, 70);

        password.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        password.setBorder(null);
        addUsrPanel.add(password);
        password.setBounds(620, 220, 330, 28);

        username.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        username.setBorder(null);
        addUsrPanel.add(username);
        username.setBounds(228, 220, 330, 28);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N

        userTable.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        userTable.setRowHeight(25);
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(userTable);

        addUsrPanel.add(jScrollPane2);
        jScrollPane2.setBounds(70, 470, 1070, 230);

        backgroundUsrs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addUser.png"))); // NOI18N
        addUsrPanel.add(backgroundUsrs);
        backgroundUsrs.setBounds(0, 0, 1200, 720);

        box.add(addUsrPanel, "card3");

        addCmpPanel.setLayout(null);

        updateCmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.jpg"))); // NOI18N
        updateCmp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updateCmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateCmpMouseClicked(evt);
            }
        });
        addCmpPanel.add(updateCmp);
        updateCmp.setBounds(750, 322, 190, 70);

        backCmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.jpg"))); // NOI18N
        backCmp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        backCmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backCmpMouseClicked(evt);
            }
        });
        addCmpPanel.add(backCmp);
        backCmp.setBounds(950, 320, 220, 70);

        addCmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.jpg"))); // NOI18N
        addCmp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addCmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addCmpMouseClicked(evt);
            }
        });
        addCmpPanel.add(addCmp);
        addCmp.setBounds(550, 320, 190, 70);

        nameCmp.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        nameCmp.setBorder(null);
        addCmpPanel.add(nameCmp);
        nameCmp.setBounds(60, 220, 330, 28);

        wilaya.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        wilaya.setBorder(null);
        addCmpPanel.add(wilaya);
        wilaya.setBounds(820, 220, 330, 28);

        adresse.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        adresse.setBorder(null);
        addCmpPanel.add(adresse);
        adresse.setBounds(440, 220, 330, 28);

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N

        cmpTable.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        cmpTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        cmpTable.setRowHeight(25);
        cmpTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmpTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(cmpTable);

        addCmpPanel.add(jScrollPane3);
        jScrollPane3.setBounds(70, 430, 1070, 230);

        backgroundCmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/company.png"))); // NOI18N
        addCmpPanel.add(backgroundCmp);
        backgroundCmp.setBounds(0, 0, 1200, 720);

        box.add(addCmpPanel, "card5");

        addRolePanel.setLayout(null);

        updateRole.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.jpg"))); // NOI18N
        updateRole.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updateRole.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateRoleMouseClicked(evt);
            }
        });
        addRolePanel.add(updateRole);
        updateRole.setBounds(750, 322, 190, 70);

        backRole.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.jpg"))); // NOI18N
        backRole.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        backRole.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backRoleMouseClicked(evt);
            }
        });
        addRolePanel.add(backRole);
        backRole.setBounds(950, 320, 220, 70);

        addRole.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.jpg"))); // NOI18N
        addRole.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addRole.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addRoleMouseClicked(evt);
            }
        });
        addRolePanel.add(addRole);
        addRole.setBounds(550, 320, 190, 70);

        cmpRole.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        cmpRole.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmpRoleItemStateChanged(evt);
            }
        });
        cmpRole.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmpRoleMouseClicked(evt);
            }
        });
        cmpRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmpRoleActionPerformed(evt);
            }
        });
        addRolePanel.add(cmpRole);
        cmpRole.setBounds(400, 210, 280, 35);

        contractRole.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        contractRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "chosse" }));
        addRolePanel.add(contractRole);
        contractRole.setBounds(780, 210, 280, 35);

        userRole.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        addRolePanel.add(userRole);
        userRole.setBounds(55, 210, 280, 35);

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N

        roleTable.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        roleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        roleTable.setRowHeight(25);
        roleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roleTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(roleTable);

        addRolePanel.add(jScrollPane4);
        jScrollPane4.setBounds(70, 470, 1070, 230);

        backgroundRole.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Role.png"))); // NOI18N
        addRolePanel.add(backgroundRole);
        backgroundRole.setBounds(0, 0, 1200, 720);

        box.add(addRolePanel, "card6");

        addContractPanel.setLayout(null);

        backContr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.jpg"))); // NOI18N
        backContr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        backContr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backContrMouseClicked(evt);
            }
        });
        addContractPanel.add(backContr);
        backContr.setBounds(950, 340, 220, 70);

        updateContr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.jpg"))); // NOI18N
        updateContr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updateContr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateContrMouseClicked(evt);
            }
        });
        addContractPanel.add(updateContr);
        updateContr.setBounds(750, 340, 190, 70);

        addAvnnPanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/avenant.jpg"))); // NOI18N
        addAvnnPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addAvnnPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAvnnPanelMouseClicked(evt);
            }
        });
        addContractPanel.add(addAvnnPanel);
        addAvnnPanel.setBounds(350, 340, 190, 70);

        addContr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.jpg"))); // NOI18N
        addContr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addContr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addContrMouseClicked(evt);
            }
        });
        addContractPanel.add(addContr);
        addContr.setBounds(550, 340, 190, 70);

        companyContr.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        addContractPanel.add(companyContr);
        companyContr.setBounds(50, 175, 280, 35);

        searchByContract.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        searchByContract.setText("Recherche par contrats");
        searchByContract.setBorder(null);
        searchByContract.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchByContractCaretUpdate(evt);
            }
        });
        searchByContract.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchByContractMouseClicked(evt);
            }
        });
        addContractPanel.add(searchByContract);
        searchByContract.setBounds(413, 428, 270, 28);

        retenuContr.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        retenuContr.setBorder(null);
        retenuContr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                retenuContrKeyPressed(evt);
            }
        });
        addContractPanel.add(retenuContr);
        retenuContr.setBounds(58, 273, 107, 28);

        agenceContr.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        agenceContr.setBorder(null);
        addContractPanel.add(agenceContr);
        agenceContr.setBounds(280, 273, 295, 28);

        ripContr.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        ripContr.setBorder(null);
        ripContr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ripContrKeyPressed(evt);
            }
        });
        addContractPanel.add(ripContr);
        ripContr.setBounds(624, 273, 295, 28);

        dureeContr.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        dureeContr.setBorder(null);
        dureeContr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dureeContrKeyPressed(evt);
            }
        });
        addContractPanel.add(dureeContr);
        dureeContr.setBounds(980, 182, 65, 28);

        numContr.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        numContr.setBorder(null);
        addContractPanel.add(numContr);
        numContr.setBounds(407, 180, 240, 28);

        dateDebutContr.setBackground(new java.awt.Color(255, 255, 255));
        dateDebutContr.setDateFormatString("dd/MM/yyyy");
        dateDebutContr.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        dateDebutContr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateDebutContrKeyPressed(evt);
            }
        });
        addContractPanel.add(dateDebutContr);
        dateDebutContr.setBounds(700, 175, 210, 35);

        tva.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tva.setText("TVA (19%)");
        addContractPanel.add(tva);
        tva.setBounds(970, 270, 120, 30);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N

        contrTable.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        contrTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        contrTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        contrTable.setRowHeight(25);
        contrTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contrTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(contrTable);

        addContractPanel.add(jScrollPane1);
        jScrollPane1.setBounds(70, 470, 1070, 190);

        backgroundContr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Contract.png"))); // NOI18N
        addContractPanel.add(backgroundContr);
        backgroundContr.setBounds(0, 0, 1200, 720);

        box.add(addContractPanel, "card4");

        getContentPane().add(box);
        box.setBounds(0, 0, 1200, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents
  private void affichage(){
      modelTableUseres.setRowCount(0);
      modelTableCompany.setRowCount(0);
      modelTableContracts.setRowCount(0);
      modelTableAvenant.setRowCount(0);
      modelTableRole.setRowCount(0);
      Connecter conn=new Connecter();
      Connection con=conn.ObteneurConction();
      
      //Affichage User Table
        try {
            PreparedStatement pst = con.prepareStatement("select *from user");
            ResultSet rs=pst.executeQuery();
            while (rs.next()){
              modelTableUseres.addRow(new Object[]{rs.getString("id"),rs.getString("username"),rs.getString("password")});
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        userTable.setModel(modelTableUseres);
     //Affichage Enterprise Table
     try {
            PreparedStatement pst = con.prepareStatement("select *from enterprises");
            ResultSet rs=pst.executeQuery();
            while (rs.next()){
              modelTableCompany.addRow(new Object[]{rs.getString("id"),rs.getString("name"),rs.getString("adress"),rs.getString("wilaya")});
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmpTable.setModel(modelTableCompany);
     // Affichage Contracts Table
     try {
            PreparedStatement pst = con.prepareStatement("SELECT enterprises.name,contracts.num_contract,contracts.date_debut,contracts.duree,contracts.retenu,contracts.tva,contracts.agence,contracts.rip FROM contracts,enterprises  WHERE enterprises.id = contracts.id_ent");
            ResultSet rs=pst.executeQuery();
            while (rs.next()){
              modelTableContracts.addRow(new Object[]{rs.getString("name"),rs.getString("num_contract"),rs.getString("date_debut"),rs.getString("duree"),rs.getString("retenu"),rs.getString("tva"),rs.getString("agence"),rs.getString("rip")});
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        contrTable.setModel(modelTableContracts);
    // Affichage Avenant Table
     try {
            PreparedStatement pst = con.prepareStatement("SELECT enterprises.name,avenant.avenant_num,contracts.num_contract,avenant.date_debut,avenant.duree FROM contracts,avenant,enterprises  WHERE avenant.ref_Cont = contracts.id_cont and enterprises.id = contracts.id_ent");
            ResultSet rs=pst.executeQuery();
            while (rs.next()){
              modelTableAvenant.addRow(new Object[]{rs.getString("name"),rs.getString("num_contract"),rs.getString("avenant_num"),rs.getString("date_debut"),rs.getString("duree")});
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        avnTable.setModel(modelTableAvenant);
    // Affichage Role Table
     try {
            PreparedStatement pst = con.prepareStatement("SELECT user.username,enterprises.name,contracts.num_contract FROM user,enterprises,contracts,role WHERE role.id_user = user.id and role.id_contract = contracts.id_cont and enterprises.id = contracts.id_ent");
            ResultSet rs=pst.executeQuery();
            while (rs.next()){
              modelTableRole.addRow(new Object[]{rs.getString("username"),rs.getString("name"),rs.getString("num_contract")});
            }
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        roleTable.setModel(modelTableRole);    
  }
  private void comboBoxCompanyRole(JComboBox combo) { 
        try {
            Connecter conn=new Connecter();
           Connection con=conn.ObteneurConction();
            PreparedStatement pst = con.prepareStatement("SELECT DISTINCT name from enterprises ");

            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                String name = rs.getString("name");
                combo.addItem(name);
                
            }

        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
            
        }

    }
  private void comboBoxCompanyContr() { 
        try {
            Connecter conn=new Connecter();
           Connection con=conn.ObteneurConction();
            PreparedStatement pst = con.prepareStatement("SELECT DISTINCT name from enterprises ");

            ResultSet rs = pst.executeQuery();
            
            while (rs.next()) {
                String name = rs.getString("name");
                companyContr.addItem(name);
                
            }

        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }
  private void comboBoxContract(JComboBox combo) { 
        try {
            Connecter conn=new Connecter();
           Connection con=conn.ObteneurConction();
            PreparedStatement pst = con.prepareStatement("SELECT DISTINCT num_contract FROM contracts");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                String name = rs.getString("num_contract");
                combo.addItem(name);               
            }

        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
  private void comboBoxUser() { 
        try {
            Connecter conn=new Connecter();
           Connection con=conn.ObteneurConction();
            PreparedStatement pst = con.prepareStatement("SELECT DISTINCT username from user where username!=\"Admin\" and username!=\"Gerant\"");

            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                String name = rs.getString("username");
                userRole.addItem(name);
            }

        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }
private void rechercheContact(){
    
  try{
    modelTableContracts.setRowCount(0);
    Connecter conn=new Connecter();
    Connection con=conn.ObteneurConction();
    PreparedStatement preparedStatement = con.prepareStatement("SELECT enterprises.name,contracts.num_contract,contracts.date_debut,contracts.duree,contracts.retenu,contracts.tva,contracts.agence,contracts.rip FROM contracts,enterprises  WHERE enterprises.id = contracts.id_ent and contracts.num_contract like ?");
    preparedStatement.setString(1, "%"+searchByContract.getText()+"%");
    ResultSet rs=preparedStatement.executeQuery();
    while (rs.next()){
      modelTableContracts.addRow(new Object[]{rs.getString("name"),rs.getString("num_contract"),rs.getString("date_debut"),rs.getString("duree"),rs.getString("retenu"),rs.getString("tva"),rs.getString("agence"),rs.getString("rip")});
  }

  
  }catch(SQLException e){System.err.println("erreur");  }
    
    }
private void rechercheContactAv(){
    
  try{
    modelTableAvenant.setRowCount(0);
    Connecter conn=new Connecter();
    Connection con=conn.ObteneurConction();
    PreparedStatement preparedStatement = con.prepareStatement("SELECT enterprises.name,avenant.avenant_num,contracts.num_contract,avenant.date_debut,avenant.duree FROM contracts,avenant,enterprises  WHERE avenant.ref_Cont = contracts.id_cont and enterprises.id = contracts.id_ent and num_contract = ?");
    preparedStatement.setString(1,contractAvnanantSearch.getSelectedItem().toString());
    ResultSet rs=preparedStatement.executeQuery();
    while (rs.next()){
      modelTableAvenant.addRow(new Object[]{rs.getString("name"),rs.getString("num_contract"),rs.getString("avenant_num"),rs.getString("date_debut"),rs.getString("duree")});
  }

  
  }catch(SQLException e){System.err.println("erreur");  }
    
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setLocationRelativeTo(null);
        contrTable.getColumnModel().getColumn(0).setPreferredWidth(170);
        contrTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        contrTable.getColumnModel().getColumn(2).setPreferredWidth(120);
        contrTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        contrTable.getColumnModel().getColumn(4).setPreferredWidth(60);
        contrTable.getColumnModel().getColumn(5).setPreferredWidth(60);
        contrTable.getColumnModel().getColumn(6).setPreferredWidth(170);
        contrTable.getColumnModel().getColumn(7).setPreferredWidth(300);
    }//GEN-LAST:event_formWindowOpened

    private void addUsresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUsresMouseClicked
        // TODO add your handling code here:
        adminPanel.setVisible(false);
        addUsrPanel.setVisible(true);
        addContractPanel.setVisible(false);
        addRolePanel.setVisible(false);
        addCmpPanel.setVisible(false);
    }//GEN-LAST:event_addUsresMouseClicked

    private void addContractsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addContractsMouseClicked
        // TODO add your handling code here:
        companyContr.removeAllItems();
        comboBoxCompanyContr();
        adminPanel.setVisible(false);
        addUsrPanel.setVisible(false);
        addContractPanel.setVisible(true);
        addRolePanel.setVisible(false);
        addCmpPanel.setVisible(false);
    }//GEN-LAST:event_addContractsMouseClicked

    private void addRolesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addRolesMouseClicked
         //   if(cmpRole == null){
               
            //}
            
        //for(int i =0;i<cmpRole.getItemCount();i++){
        //    System.err.println(cmpRole.getItemAt(i));
       //   if(cmpRole.getItemAt(i)!="chosse"){
       //     cmpRole.removeItemAt(i);    
        //    }  
       // }
        cmpRole.removeAllItems();
        comboBoxCompanyRole(cmpRole);
        userRole.removeAllItems();
        comboBoxUser();
        adminPanel.setVisible(false);
        addUsrPanel.setVisible(false);
        addContractPanel.setVisible(false);
        addRolePanel.setVisible(true);
        addCmpPanel.setVisible(false);
        
    }//GEN-LAST:event_addRolesMouseClicked

    private void addCmpsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCmpsMouseClicked
        // TODO add your handling code here:
        adminPanel.setVisible(false);
        addUsrPanel.setVisible(false);
        addContractPanel.setVisible(false);
        addRolePanel.setVisible(false);
        addCmpPanel.setVisible(true);
    }//GEN-LAST:event_addCmpsMouseClicked

    private void backUsrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backUsrMouseClicked
        // TODO add your handling code here:
        adminPanel.setVisible(true);
        addUsrPanel.setVisible(false);
        addContractPanel.setVisible(false);
        addRolePanel.setVisible(false);
        addCmpPanel.setVisible(false);
        username.setText("");
        password.setText("");
        dureeContr.setText("");
        retenuContr.setText("");
        agenceContr.setText("");
        ripContr.setText("");
    }//GEN-LAST:event_backUsrMouseClicked

    private void backContrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backContrMouseClicked
        // TODO add your handling code here:
        adminPanel.setVisible(true);
        addUsrPanel.setVisible(false);
        addContractPanel.setVisible(false);
        addRolePanel.setVisible(false);
        addCmpPanel.setVisible(false);
        numContr.setText("");
        dateDebutContr.setCalendar(null);
    }//GEN-LAST:event_backContrMouseClicked

    private void backCmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backCmpMouseClicked
        // TODO add your handling code here:
        adminPanel.setVisible(true);
        addUsrPanel.setVisible(false);
        addContractPanel.setVisible(false);
        addRolePanel.setVisible(false);
        addCmpPanel.setVisible(false);
        nameCmp.setText("");
        wilaya.setText("");
        adresse.setText("");
    }//GEN-LAST:event_backCmpMouseClicked

    private void backRoleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backRoleMouseClicked
        // TODO add your handling code here:
        adminPanel.setVisible(true);
        addUsrPanel.setVisible(false);
        addContractPanel.setVisible(false);
        addRolePanel.setVisible(false);
        addCmpPanel.setVisible(false);
    }//GEN-LAST:event_backRoleMouseClicked

    private void addAvnnPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAvnnPanelMouseClicked
        // TODO add your handling code here:
        cmpAvanant.removeAllItems();
        comboBoxCompanyRole(cmpAvanant);
        comboBoxContract(contractAvnanantSearch);
        avanant.setVisible(true);
    }//GEN-LAST:event_addAvnnPanelMouseClicked

    private void addUsrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUsrMouseClicked
        // TODO add your handling code here:
        Connecter conn=new Connecter();
        Connection con=conn.ObteneurConction();
        String userNameInput = username.getText().toLowerCase().trim();
        String passwordInput = password.getText();
        if ((!"".equals(userNameInput)) & (!"".equals(passwordInput))){
            try{                  
            PreparedStatement pst = con.prepareStatement("INSERT INTO user (username,password) VALUE(?,?)");
            pst.setString(1, userNameInput);
            pst.setString(2,passwordInput);
            pst.executeUpdate();          
            JOptionPane.showMessageDialog(null, "Ajouté Succés");
            username.setText("");
            password.setText("");
            }catch (SQLException ex){
              //Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
              JOptionPane.showMessageDialog(null, "L'utilisateur déja existe");  
          }
    }else{
           JOptionPane.showMessageDialog(null, "champ vide");  
         }
        affichage();
    }//GEN-LAST:event_addUsrMouseClicked

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        // TODO add your handling code here:
        int i = userTable.getSelectedRow();
        clickUserTable =true;
        TableModel m = userTable.getModel();
        username.setText(m.getValueAt(i, 1).toString());
        password.setText(m.getValueAt(i, 2).toString());
    }//GEN-LAST:event_userTableMouseClicked

    private void updateUsrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateUsrMouseClicked
        if(clickUserTable ==true){
        int i = userTable.getSelectedRow();
        TableModel m = userTable.getModel();
        String j =  m.getValueAt(i, 0).toString();
        try {
            // TODO add your handling code here:
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            String sql = "update user set password =? where id =" +j ;
            PreparedStatement preparedStatement =con.prepareStatement(sql);
            //preparedStatement.setString(1,username.getText());
            preparedStatement.setString(1,password.getText());
            preparedStatement.executeUpdate();
            JOptionPane.showMessageDialog(null, "Modification est succés");
            username.setText("");
            password.setText("");
             affichage();
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(null, "Choisissez un utilisateur à modifier"); 
        }
    }//GEN-LAST:event_updateUsrMouseClicked

    private void addCmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCmpMouseClicked
        // TODO add your handling code here:
        Connecter conn=new Connecter();
        Connection con=conn.ObteneurConction();
        String cmpName = nameCmp.getText();
        String adresseCmp = adresse.getText();
        String wilayaCmp = wilaya.getText();
        if ((!"".equals(cmpName)) & (!"".equals(adresseCmp)) & (!"".equals(wilayaCmp))){
            try {                  
            PreparedStatement pst = con.prepareStatement("INSERT INTO enterprises (name,adress,wilaya) VALUE(?,?,?)");
            pst.setString(1, cmpName);
            pst.setString(2,adresseCmp);
            pst.setString(3,wilayaCmp);
            pst.executeUpdate();
           
            JOptionPane.showMessageDialog(null, "Ajouté Succés");  
            nameCmp.setText("");
            adresse.setText("");
            wilaya.setText("");
            
      
            } catch (SQLException ex) {
              Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
          }
    }else{
           JOptionPane.showMessageDialog(null, "champ vide");  
         }
        affichage();
    }//GEN-LAST:event_addCmpMouseClicked

    private void cmpTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmpTableMouseClicked
        // TODO add your handling code here:
        clickCompanyTable = true;
        int i = cmpTable.getSelectedRow();
        TableModel m = cmpTable.getModel();
        nameCmp.setText(m.getValueAt(i, 1).toString());
        adresse.setText(m.getValueAt(i, 2).toString());
        wilaya.setText(m.getValueAt(i, 3).toString());
        
    }//GEN-LAST:event_cmpTableMouseClicked

    private void updateCmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateCmpMouseClicked
        // TODO add your handling code here:
        if(clickCompanyTable == true){
        int i = cmpTable.getSelectedRow();
        TableModel m = cmpTable.getModel();
        String j =  m.getValueAt(i, 0).toString();
        try {
            // TODO add your handling code here:
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            String sql = "update enterprises set name =? , adress = ? , wilaya = ?  where id =" +j ;
            PreparedStatement preparedStatement =con.prepareStatement(sql);
            //preparedStatement.setString(1,username.getText());
            preparedStatement.setString(1,nameCmp.getText());
            preparedStatement.setString(2,adresse.getText());
            preparedStatement.setString(3,wilaya.getText());
            preparedStatement.executeUpdate();
            JOptionPane.showMessageDialog(null, "Modification est succés");
            nameCmp.setText("");
            adresse.setText("");
            wilaya.setText("");
            affichage();
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(null, "Choisissez un enterprise à modifier"); 
        }
    }//GEN-LAST:event_updateCmpMouseClicked

    private void addContrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addContrMouseClicked
        // TODO add your handling code here:
        Connecter conn=new Connecter();
        Connection con=conn.ObteneurConction();
        String numCon = numContr.getText();
        String duree = dureeContr.getText();
        String retenu = retenuContr.getText();
        String agence = agenceContr.getText();
        String rip = ripContr.getText();
        
        if ((!"".equals(numCon)) & (!"".equals(duree)) & (!"".equals(retenu)) & (!"".equals(agence)) & (!"".equals(rip)) & dateDebutContr.getDate() != null){
            if(rip.matches("\\d{3} \\d{5} \\d{10} \\d{2}")){
            try {
            SimpleDateFormat Rt = new SimpleDateFormat("yyyy-MM-dd");
            String dateDebut = Rt.format(dateDebutContr.getDate());
            getIdCompany();
            PreparedStatement pst = con.prepareStatement("INSERT INTO contracts (num_contract,date_debut,duree,retenu,tva,agence,rip,id_ent) VALUE(?,?,?,?,?,?,?,?)");
            pst.setString(1, numCon);
            pst.setString(2,dateDebut);
            pst.setString(3,duree);
            pst.setString(4,retenu);
            if(tva.isSelected()){
                pst.setInt(5,19);
            }else{
                pst.setInt(5,0);
            }
            pst.setString(6,agence.toUpperCase());
            pst.setString(7,rip);
            pst.setString(8,idCompany);
            pst.executeUpdate();         
            JOptionPane.showMessageDialog(null, "Ajouté Succés");
            numContr.setText("");
            } catch (SQLException ex) {
              JOptionPane.showMessageDialog(null, "Numero contract est déja existe");  
               //Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
            }
            }else{
                    JOptionPane.showMessageDialog(null, "RIB est incorrect");  
            }
    }else{
           JOptionPane.showMessageDialog(null, "champ vide");  
         }
        affichage();
    }//GEN-LAST:event_addContrMouseClicked

    private void retenuContrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_retenuContrKeyPressed
        // TODO add your handling code here:
        text_long(retenuContr,10,evt);
    }//GEN-LAST:event_retenuContrKeyPressed

    private void dureeContrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dureeContrKeyPressed
        // TODO add your handling code here:
        text_long(dureeContr,3,evt);
    }//GEN-LAST:event_dureeContrKeyPressed

    private void ripContrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ripContrKeyPressed
        // TODO add your handling code here:
        text_long(ripContr,23,evt);
    }//GEN-LAST:event_ripContrKeyPressed

    private void contrTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contrTableMouseClicked
        // TODO add your handling code here:
        clickTableContract = true;
        int i = contrTable.getSelectedRow();
        TableModel m = contrTable.getModel();
        companyContr.setSelectedItem(m.getValueAt(i, 0).toString());
        numContr.setText(m.getValueAt(i, 1).toString());
        try {
            java.util.Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(m.getValueAt(i, 2).toString());
            dateDebutContr.setDate(date2);
        } catch (ParseException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        dureeContr.setText(m.getValueAt(i, 3).toString());
        retenuContr.setText(m.getValueAt(i, 4).toString());
        if("19".equals(m.getValueAt(i, 5).toString())){
            tva.setSelected(true);
        }else{
            tva.setSelected(false);
        }
        agenceContr.setText(m.getValueAt(i, 6).toString());
        ripContr.setText(m.getValueAt(i, 7).toString());
        //Avenant get item
        /*nomCompanyAvn.setText(m.getValueAt(i, 1).toString());
        numContAvn.setText(m.getValueAt(i, 2).toString());
        retenuAvn.setText(m.getValueAt(i, 5).toString());
        agenceAvn.setText(m.getValueAt(i, 6).toString());
        ripAvn.setText(m.getValueAt(i, 7).toString());*/
    }//GEN-LAST:event_contrTableMouseClicked

    private void updateContrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateContrMouseClicked
        // TODO add your handling code here:
        if(clickTableContract ==true){
        String numCon = numContr.getText();
        String duree = dureeContr.getText();
        String retenu = retenuContr.getText();
        String agence = agenceContr.getText();
        String rip = ripContr.getText();
    
        
        int i = contrTable.getSelectedRow();
        TableModel m = contrTable.getModel();
        int j =  getIdContractTable(m.getValueAt(i, 1).toString()) ;
        if ((!"".equals(numCon)) & (!"".equals(duree)) & (!"".equals(retenu)) & (!"".equals(agence)) & (!"".equals(rip)) & dateDebutContr.getDate() != null){
        if(rip.matches("\\d{3} \\d{5} \\d{10} \\d{2}")){
        SimpleDateFormat Rt = new SimpleDateFormat("yyyy-MM-dd");
        String date_debut = Rt.format(dateDebutContr.getDate());
        try {
            // TODO add your handling code here:
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            String sql = "update contracts set num_contract =? , date_debut = ? , duree = ?, retenu = ?, tva = ?, agence = ?, rip = ?  where id_cont =" +j ;
            PreparedStatement preparedStatement =con.prepareStatement(sql);
            //preparedStatement.setString(1,username.getText());
            preparedStatement.setString(1,numContr.getText());
            preparedStatement.setString(2,date_debut);
            preparedStatement.setString(3,dureeContr.getText());
            preparedStatement.setString(4,retenuContr.getText());
            if(tva.isSelected()){
                preparedStatement.setInt(5,19);
            }else{
                preparedStatement.setInt(5,0);
            }

            preparedStatement.setString(6,agenceContr.getText());
            preparedStatement.setString(7,ripContr.getText());
            preparedStatement.executeUpdate();
            JOptionPane.showMessageDialog(null, "Modification est succés");
            clickTableContract = false;
            affichage();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Numero contract est déja existe"); 
        }
         }else{
                    JOptionPane.showMessageDialog(null, "RIB est incorrect");  
            }
    }else{
           JOptionPane.showMessageDialog(null, "champ vide");  
         }
        }else{
            JOptionPane.showMessageDialog(null, "Choisissez un contrat à modifier"); 
        }
    }//GEN-LAST:event_updateContrMouseClicked

    private void addAvnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAvnMouseClicked
        // TODO add your handling code here:
        Connecter conn=new Connecter();
        Connection con=conn.ObteneurConction();
        String numAv = numAvn.getValue().toString();
        String duree = dureeAvn.getText();
        SimpleDateFormat Rt = new SimpleDateFormat("yyyy-MM-dd");
        String dateDebut = Rt.format(dateDebutAvn.getDate());
        if ((!"".equals(numAv)) & (!"".equals(duree)) & dateDebut != null & !"chosse contract".equals(contractAvnanant.getSelectedItem())){
            try {
            getIdContract(contractAvnanant.getSelectedItem().toString());
            PreparedStatement pst = con.prepareStatement("INSERT INTO avenant (date_debut,duree,avenant_num,ref_cont) VALUE(?,?,?,?)");
            pst.setString(3,contractAvnanant.getSelectedItem().toString()+"--"+ numAv);
            pst.setString(1,dateDebut);
            pst.setString(2,duree);
            pst.setString(4,idContract);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Ajouté Succés");
            } catch (SQLException ex) {
              //Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
              JOptionPane.showMessageDialog(null, "Le numero avenant est déja exister");
          }
    }else{
           JOptionPane.showMessageDialog(null, "champ vide");  
         }
        //affichage();
    }//GEN-LAST:event_addAvnMouseClicked

    private void avnTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avnTableMouseClicked
        // TODO add your handling code here:
        clickAvTable = true;
        int i = avnTable.getSelectedRow();
        TableModel m = avnTable.getModel();
        cmpAvanant.setSelectedItem(m.getValueAt(i, 0).toString());
        contractAvnanant.setSelectedItem(m.getValueAt(i, 1).toString());
        String numeroAvenant =m.getValueAt(i, 2).toString().substring(m.getValueAt(i, 2).toString().lastIndexOf("--")+2,m.getValueAt(i, 2).toString().length()); 
        numAvn.setValue(Integer.parseInt(numeroAvenant));
        try {
            java.util.Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(m.getValueAt(i, 3).toString());
            dateDebutAvn.setDate(date2);
        } catch (ParseException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        dureeAvn.setText(m.getValueAt(i, 4).toString());
    }//GEN-LAST:event_avnTableMouseClicked

    private void updateAvnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateAvnMouseClicked
        // TODO add your handling code here:
        if(clickAvTable ==true){
        int i = avnTable.getSelectedRow();
        TableModel m = avnTable.getModel();
        int j =  getIdAv(m.getValueAt(i, 2).toString());
        SimpleDateFormat Rt = new SimpleDateFormat("yyyy-MM-dd");
        String date_debut = Rt.format(dateDebutAvn.getDate());
        try {
            // TODO add your handling code here:
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            String sql = "update avenant set date_debut = ? , duree = ?,avenant_num = ?,ref_cont=?  where ref_av =" +j ;
            PreparedStatement preparedStatement =con.prepareStatement(sql);
            preparedStatement.setString(3,contractAvnanant.getSelectedItem().toString()+"--"+numAvn.getValue().toString());
            preparedStatement.setString(1,date_debut);
            preparedStatement.setString(2,dureeAvn.getText());
            getIdContract(contractAvnanant.getSelectedItem().toString());
            preparedStatement.setString(4,idContract);
            preparedStatement.executeUpdate();
            JOptionPane.showMessageDialog(null, "Modification est succés");
            clickAvTable = false;
            //affichage();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Le numero avenant est déja exister");
        }
        }else{
            JOptionPane.showMessageDialog(null, "Choisissez un Avenant à modifier");
        }
    }//GEN-LAST:event_updateAvnMouseClicked

    private void cmpRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpRoleActionPerformed

        contractRole.removeAllItems();
        contractRole.addItem("chosse contract");
        try {
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            PreparedStatement pst = con.prepareStatement("SELECT DISTINCT contracts.num_contract FROM contracts,enterprises WHERE contracts.id_ent = enterprises.id and enterprises.name =? ");
            //cmpRole.addItem("chosse");
            if(cmpRole.getSelectedItem() !=null){

            String selected = cmpRole.getSelectedItem().toString();
            
                pst.setString(1,selected);
            }
            
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                String name = rs.getString("num_contract");
                contractRole.addItem(name);
            }
        } catch (HeadlessException | SQLException e) {
           //JOptionPane.showMessageDialog(null, e);
           
        }
    }//GEN-LAST:event_cmpRoleActionPerformed

    private void addRoleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addRoleMouseClicked
        // TODO add your handling code here:
        Connecter conn=new Connecter();
        Connection con=conn.ObteneurConction();
            try {
            getIdContract(contractRole.getSelectedItem().toString());
            getIdUser(userRole.getSelectedItem().toString());
            PreparedStatement pst = con.prepareStatement("INSERT INTO role (id_user,id_contract) VALUE(?,?)");
            pst.setString(1, idUser);
            pst.setString(2,idContract);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Ajouté Succés");
            } catch (SQLException ex) {
              //Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
              JOptionPane.showMessageDialog(null, "Ce rôle a été donné par");
          }
        affichage();
    }//GEN-LAST:event_addRoleMouseClicked

    private void roleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roleTableMouseClicked
        // TODO add your handling code here:
        int i = roleTable.getSelectedRow();
        TableModel m = roleTable.getModel();
        userRole.setSelectedItem(m.getValueAt(i, 0).toString());
        cmpRole.setSelectedItem(m.getValueAt(i, 1).toString());
        contractRole.setSelectedItem(m.getValueAt(i, 2).toString());
    }//GEN-LAST:event_roleTableMouseClicked

    private void updateRoleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateRoleMouseClicked
        // TODO add your handling code here:
        if(clickRoleTable ==true){
        int i = roleTable.getSelectedRow();
        TableModel m = roleTable.getModel();
        String user =  m.getValueAt(i, 0).toString();
        String cont =  m.getValueAt(i, 2).toString();
        
        getIdContract(cont);
        getIdUser(user);
        if(checkRoleUpdate(idUser, idContract)){
            JOptionPane.showMessageDialog(null, "Le rôle a été donné");
        }else{
        try {
                Connecter conn=new Connecter();
                Connection con=conn.ObteneurConction();
                String sql = "delete from role where  id_user= ? AND id_contract =?";
                PreparedStatement preparedStatement = con.prepareStatement(sql);
                preparedStatement.setString(1, idUser);
                preparedStatement.setString(2, idContract);
                preparedStatement.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        ///////////////////////////////////
        
        try {
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            getIdContract(contractRole.getSelectedItem().toString());
            getIdUser(userRole.getSelectedItem().toString());
            PreparedStatement pst = con.prepareStatement("INSERT INTO role (id_user,id_contract) VALUE(?,?)");
            pst.setString(1, idUser);
            pst.setString(2,idContract);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Modification est succés");
            } catch (SQLException ex) {
              //Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
              //JOptionPane.showMessageDialog(null, "Le rôle a été donné");
          }
        }
        affichage();
        }else{
            JOptionPane.showMessageDialog(null, "Choisissez un Role à modifier");
        }
    }//GEN-LAST:event_updateRoleMouseClicked

    private void cmpRoleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmpRoleMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmpRoleMouseClicked

    private void searchByContractCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchByContractCaretUpdate
        // TODO add your handling code here:7
       rechercheContact();
    }//GEN-LAST:event_searchByContractCaretUpdate

    private void cmpRoleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmpRoleItemStateChanged
        // TODO add your handling code here:
   
    }//GEN-LAST:event_cmpRoleItemStateChanged

    private void searchByContractMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchByContractMouseClicked
        // TODO add your handling code here:
        searchByContract.setText("");
    }//GEN-LAST:event_searchByContractMouseClicked

    private void dateDebutContrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateDebutContrKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateDebutContrKeyPressed

    private void close1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close1MouseClicked
        // TODO add your handling code here:
        //System.exit(0);
        avanant.dispose();
        dateDebutAvn.setCalendar(null);
        dureeAvn.setText("");
    }//GEN-LAST:event_close1MouseClicked

    private void avanantWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_avanantWindowOpened
        // TODO add your handling code here:
        avanant.setLocationRelativeTo(null);
    }//GEN-LAST:event_avanantWindowOpened

    private void cmpAvanantItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmpAvanantItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpAvanantItemStateChanged

    private void cmpAvanantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmpAvanantMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpAvanantMouseClicked

    private void cmpAvanantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmpAvanantActionPerformed
        // TODO add your handling code here:
        
        contractAvnanant.removeAllItems();
        contractAvnanant.addItem("chosse contract");
        try {
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            PreparedStatement pst = con.prepareStatement("SELECT DISTINCT contracts.num_contract FROM contracts,enterprises WHERE contracts.id_ent = enterprises.id and enterprises.name =? ");
            if(cmpAvanant.getSelectedItem() !=null){

            String selected = cmpAvanant.getSelectedItem().toString();
            
                pst.setString(1,selected);
            }
            
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                String name = rs.getString("num_contract");
                contractAvnanant.addItem(name);
            }
        } catch (HeadlessException | SQLException e) {
           //JOptionPane.showMessageDialog(null, e);
           
        }

    }//GEN-LAST:event_cmpAvanantActionPerformed

    private void contractAvnanantSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contractAvnanantSearchActionPerformed
        // TODO add your handling code here:
        rechercheContactAv();
    }//GEN-LAST:event_contractAvnanantSearchActionPerformed
public void getIdCompany(){
        try {
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            //stm = conn.ObteneurConction().createStatement();
            PreparedStatement pst = con.prepareStatement("SELECT id FROM enterprises WHERE name=?");
            pst.setString(1, companyContr.getSelectedItem().toString());
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                idCompany =  rs.getString("id");
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
}  
public boolean checkRoleUpdate(String user,String contract){
    try {
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            //stm = conn.ObteneurConction().createStatement();
            PreparedStatement pst = con.prepareStatement("SELECT id_user,id_contract FROM role WHERE id_user=? and id_contract = ?");
            pst.setString(1, user);
            pst.setString(2, contract);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                return true;
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return false;
    
}
public void getIdContract(String T){
        try {
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            //stm = conn.ObteneurConction().createStatement();
            PreparedStatement pst = con.prepareStatement("SELECT id_cont FROM contracts WHERE num_contract=?");
            pst.setString(1,T);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                idContract =  rs.getString("id_cont");
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        

} 
public int getIdContractTable(String T){
        try {
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            PreparedStatement pst = con.prepareStatement("SELECT id_cont FROM contracts WHERE num_contract=?");
            pst.setString(1,T);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                return  rs.getInt("id_cont");
                
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return 0;
}
public int getIdAv(String numAv){
        try {
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            PreparedStatement pst = con.prepareStatement("SELECT avenant.ref_av FROM avenant WHERE avenant.avenant_num =?");
            pst.setString(1,numAv);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                return rs.getInt("ref_av");
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return 0;
}

public void getIdUser(String T){
        try {
            Connecter conn=new Connecter();
            Connection con=conn.ObteneurConction();
            PreparedStatement pst = con.prepareStatement("SELECT id FROM user WHERE username=?");
            pst.setString(1, T);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                idUser =  rs.getString("id");
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
}
public void text_long(JTextField  T,int k, java.awt.event.KeyEvent evt){
        int i=T.getText().length();
        //if(evt.getKeyChar()>='0' && evt.getKeyChar() <='9'){
            if (i<k) {
              T.setEditable(true);
            }
            else{
              T.setEditable(false);
            }
        //}else{
          //  if(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE || evt.getKeyChar() == KeyEvent.VK_DELETE || evt.getKeyChar() == KeyEvent.VK_PERIOD || evt.getKeyChar() == KeyEvent.VK_SPACE){
            //    T.setEditable(true);
            //}
            //else{
              //   T.setEditable(false);

            //}
        //}

    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addAvn;
    private javax.swing.JLabel addAvnnPanel;
    private javax.swing.JLabel addCmp;
    private javax.swing.JPanel addCmpPanel;
    private javax.swing.JLabel addCmps;
    private javax.swing.JLabel addContr;
    private javax.swing.JPanel addContractPanel;
    private javax.swing.JLabel addContracts;
    private javax.swing.JLabel addRole;
    private javax.swing.JPanel addRolePanel;
    private javax.swing.JLabel addRoles;
    private javax.swing.JLabel addUsr;
    private javax.swing.JPanel addUsrPanel;
    private javax.swing.JLabel addUsres;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JTextField adresse;
    private javax.swing.JTextField agenceContr;
    private javax.swing.JDialog avanant;
    private javax.swing.JTable avnTable;
    private javax.swing.JLabel backCmp;
    private javax.swing.JLabel backContr;
    private javax.swing.JLabel backRole;
    private javax.swing.JLabel backUsr;
    private javax.swing.JLabel backgroundAdmin;
    private javax.swing.JLabel backgroundAv;
    private javax.swing.JLabel backgroundCmp;
    private javax.swing.JLabel backgroundContr;
    private javax.swing.JLabel backgroundRole;
    private javax.swing.JLabel backgroundUsrs;
    private javax.swing.JPanel box;
    private javax.swing.JLabel close1;
    private javax.swing.JComboBox<String> cmpAvanant;
    private javax.swing.JComboBox<String> cmpRole;
    private javax.swing.JTable cmpTable;
    private javax.swing.JComboBox<String> companyContr;
    private javax.swing.JTable contrTable;
    private javax.swing.JComboBox<String> contractAvnanant;
    private javax.swing.JComboBox<String> contractAvnanantSearch;
    private javax.swing.JComboBox<String> contractRole;
    private com.toedter.calendar.JDateChooser dateDebutAvn;
    private com.toedter.calendar.JDateChooser dateDebutContr;
    private javax.swing.JTextField dureeAvn;
    private javax.swing.JTextField dureeContr;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField nameCmp;
    private javax.swing.JSpinner numAvn;
    private javax.swing.JTextField numContr;
    private javax.swing.JTextField password;
    private javax.swing.JTextField retenuContr;
    private javax.swing.JTextField ripContr;
    private javax.swing.JTable roleTable;
    private javax.swing.JTextField searchByContract;
    private javax.swing.JCheckBox tva;
    private javax.swing.JLabel updateAvn;
    private javax.swing.JLabel updateCmp;
    private javax.swing.JLabel updateContr;
    private javax.swing.JLabel updateRole;
    private javax.swing.JLabel updateUsr;
    private javax.swing.JComboBox<String> userRole;
    private javax.swing.JTable userTable;
    private javax.swing.JTextField username;
    private javax.swing.JTextField wilaya;
    // End of variables declaration//GEN-END:variables

}
